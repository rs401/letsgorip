// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: forum.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Forum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      uint64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title       string    `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description string    `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Threads     []*Thread `protobuf:"bytes,5,rep,name=threads,proto3" json:"threads,omitempty"`
	CreatedAt   int64     `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   int64     `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Forum) Reset() {
	*x = Forum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Forum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Forum) ProtoMessage() {}

func (x *Forum) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Forum.ProtoReflect.Descriptor instead.
func (*Forum) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{0}
}

func (x *Forum) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Forum) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Forum) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Forum) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Forum) GetThreads() []*Thread {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *Forum) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Forum) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Thread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ForumId   uint64  `protobuf:"varint,2,opt,name=forum_id,json=forumId,proto3" json:"forum_id,omitempty"`
	UserId    uint64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title     string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Msg       string  `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	Posts     []*Post `protobuf:"bytes,6,rep,name=posts,proto3" json:"posts,omitempty"`
	CreatedAt int64   `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64   `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Thread) Reset() {
	*x = Thread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Thread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thread) ProtoMessage() {}

func (x *Thread) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thread.ProtoReflect.Descriptor instead.
func (*Thread) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{1}
}

func (x *Thread) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Thread) GetForumId() uint64 {
	if x != nil {
		return x.ForumId
	}
	return 0
}

func (x *Thread) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Thread) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Thread) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Thread) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *Thread) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Thread) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ThreadId  uint64  `protobuf:"varint,2,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId    uint64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name      string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Msg       string  `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	Posts     []*Post `protobuf:"bytes,6,rep,name=posts,proto3" json:"posts,omitempty"`
	CreatedAt int64   `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64   `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Post) Reset() {
	*x = Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{2}
}

func (x *Post) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Post) GetThreadId() uint64 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

func (x *Post) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Post) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Post) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Post) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *Post) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Post) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetForumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forum *Forum `protobuf:"bytes,1,opt,name=forum,proto3" json:"forum,omitempty"`
}

func (x *GetForumResponse) Reset() {
	*x = GetForumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForumResponse) ProtoMessage() {}

func (x *GetForumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForumResponse.ProtoReflect.Descriptor instead.
func (*GetForumResponse) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{3}
}

func (x *GetForumResponse) GetForum() *Forum {
	if x != nil {
		return x.Forum
	}
	return nil
}

type GetForumsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetForumsRequest) Reset() {
	*x = GetForumsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForumsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForumsRequest) ProtoMessage() {}

func (x *GetForumsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForumsRequest.ProtoReflect.Descriptor instead.
func (*GetForumsRequest) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{4}
}

type GetForumsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forums []*Forum `protobuf:"bytes,1,rep,name=forums,proto3" json:"forums,omitempty"`
}

func (x *GetForumsResponse) Reset() {
	*x = GetForumsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForumsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForumsResponse) ProtoMessage() {}

func (x *GetForumsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForumsResponse.ProtoReflect.Descriptor instead.
func (*GetForumsResponse) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{5}
}

func (x *GetForumsResponse) GetForums() []*Forum {
	if x != nil {
		return x.Forums
	}
	return nil
}

type GetThreadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Thread *Thread `protobuf:"bytes,1,opt,name=thread,proto3" json:"thread,omitempty"`
}

func (x *GetThreadResponse) Reset() {
	*x = GetThreadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThreadResponse) ProtoMessage() {}

func (x *GetThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThreadResponse.ProtoReflect.Descriptor instead.
func (*GetThreadResponse) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{6}
}

func (x *GetThreadResponse) GetThread() *Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

type GetThreadsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetThreadsRequest) Reset() {
	*x = GetThreadsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetThreadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThreadsRequest) ProtoMessage() {}

func (x *GetThreadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThreadsRequest.ProtoReflect.Descriptor instead.
func (*GetThreadsRequest) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{7}
}

type GetThreadsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threads []*Thread `protobuf:"bytes,1,rep,name=threads,proto3" json:"threads,omitempty"`
}

func (x *GetThreadsResponse) Reset() {
	*x = GetThreadsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetThreadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThreadsResponse) ProtoMessage() {}

func (x *GetThreadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThreadsResponse.ProtoReflect.Descriptor instead.
func (*GetThreadsResponse) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{8}
}

func (x *GetThreadsResponse) GetThreads() []*Thread {
	if x != nil {
		return x.Threads
	}
	return nil
}

type ForumIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ForumIdRequest) Reset() {
	*x = ForumIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumIdRequest) ProtoMessage() {}

func (x *ForumIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumIdRequest.ProtoReflect.Descriptor instead.
func (*ForumIdRequest) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{9}
}

func (x *ForumIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ForumIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ForumIdResponse) Reset() {
	*x = ForumIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumIdResponse) ProtoMessage() {}

func (x *ForumIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumIdResponse.ProtoReflect.Descriptor instead.
func (*ForumIdResponse) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{10}
}

func (x *ForumIdResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ForumSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ForumSearchRequest) Reset() {
	*x = ForumSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumSearchRequest) ProtoMessage() {}

func (x *ForumSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumSearchRequest.ProtoReflect.Descriptor instead.
func (*ForumSearchRequest) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{11}
}

func (x *ForumSearchRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ForumSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forums []*Forum `protobuf:"bytes,1,rep,name=forums,proto3" json:"forums,omitempty"`
}

func (x *ForumSearchResponse) Reset() {
	*x = ForumSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forum_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumSearchResponse) ProtoMessage() {}

func (x *ForumSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forum_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumSearchResponse.ProtoReflect.Descriptor instead.
func (*ForumSearchResponse) Descriptor() ([]byte, []int) {
	return file_forum_proto_rawDescGZIP(), []int{12}
}

func (x *ForumSearchResponse) GetForums() []*Forum {
	if x != nil {
		return x.Forums
	}
	return nil
}

var File_forum_proto protoreflect.FileDescriptor

var file_forum_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0xcc, 0x01, 0x0a, 0x05, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x07,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xd2, 0x01, 0x0a, 0x06, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x6f, 0x72, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66,
	0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd0, 0x01, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x05, 0x70, 0x6f,
	0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05,
	0x66, 0x6f, 0x72, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x75, 0x6d, 0x22, 0x12, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x36, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x75, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75,
	0x6d, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x75, 0x6d, 0x73, 0x22, 0x37, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x06, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x22, 0x20, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x12, 0x46, 0x6f, 0x72, 0x75,
	0x6d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x38, 0x0a, 0x13, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x75, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72,
	0x75, 0x6d, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x75, 0x6d, 0x73, 0x32, 0x99, 0x05, 0x0a, 0x0c, 0x46,
	0x6f, 0x72, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x6f, 0x72, 0x75, 0x6d, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75,
	0x6d, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x75, 0x6d, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f,
	0x72, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x73,
	0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75,
	0x6d, 0x30, 0x01, 0x12, 0x2b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x31, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x30, 0x01, 0x12, 0x2a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x30, 0x01, 0x12,
	0x23, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x12, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x46,
	0x6f, 0x72, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x12, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75,
	0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x73, 0x34, 0x30, 0x31, 0x2f, 0x6c, 0x65, 0x74, 0x73, 0x67,
	0x6f, 0x72, 0x69, 0x70, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_forum_proto_rawDescOnce sync.Once
	file_forum_proto_rawDescData = file_forum_proto_rawDesc
)

func file_forum_proto_rawDescGZIP() []byte {
	file_forum_proto_rawDescOnce.Do(func() {
		file_forum_proto_rawDescData = protoimpl.X.CompressGZIP(file_forum_proto_rawDescData)
	})
	return file_forum_proto_rawDescData
}

var file_forum_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_forum_proto_goTypes = []interface{}{
	(*Forum)(nil),               // 0: pb.Forum
	(*Thread)(nil),              // 1: pb.Thread
	(*Post)(nil),                // 2: pb.Post
	(*GetForumResponse)(nil),    // 3: pb.GetForumResponse
	(*GetForumsRequest)(nil),    // 4: pb.GetForumsRequest
	(*GetForumsResponse)(nil),   // 5: pb.GetForumsResponse
	(*GetThreadResponse)(nil),   // 6: pb.GetThreadResponse
	(*GetThreadsRequest)(nil),   // 7: pb.GetThreadsRequest
	(*GetThreadsResponse)(nil),  // 8: pb.GetThreadsResponse
	(*ForumIdRequest)(nil),      // 9: pb.ForumIdRequest
	(*ForumIdResponse)(nil),     // 10: pb.ForumIdResponse
	(*ForumSearchRequest)(nil),  // 11: pb.ForumSearchRequest
	(*ForumSearchResponse)(nil), // 12: pb.ForumSearchResponse
}
var file_forum_proto_depIdxs = []int32{
	1,  // 0: pb.Forum.threads:type_name -> pb.Thread
	2,  // 1: pb.Thread.posts:type_name -> pb.Post
	2,  // 2: pb.Post.posts:type_name -> pb.Post
	0,  // 3: pb.GetForumResponse.forum:type_name -> pb.Forum
	0,  // 4: pb.GetForumsResponse.forums:type_name -> pb.Forum
	1,  // 5: pb.GetThreadResponse.thread:type_name -> pb.Thread
	1,  // 6: pb.GetThreadsResponse.threads:type_name -> pb.Thread
	0,  // 7: pb.ForumSearchResponse.forums:type_name -> pb.Forum
	0,  // 8: pb.ForumService.CreateForum:input_type -> pb.Forum
	1,  // 9: pb.ForumService.CreateThread:input_type -> pb.Thread
	2,  // 10: pb.ForumService.CreatePost:input_type -> pb.Post
	9,  // 11: pb.ForumService.GetForum:input_type -> pb.ForumIdRequest
	4,  // 12: pb.ForumService.GetForums:input_type -> pb.GetForumsRequest
	9,  // 13: pb.ForumService.GetThread:input_type -> pb.ForumIdRequest
	7,  // 14: pb.ForumService.GetThreads:input_type -> pb.GetThreadsRequest
	9,  // 15: pb.ForumService.GetPosts:input_type -> pb.ForumIdRequest
	0,  // 16: pb.ForumService.UpdateForum:input_type -> pb.Forum
	1,  // 17: pb.ForumService.UpdateThread:input_type -> pb.Thread
	2,  // 18: pb.ForumService.UpdatePost:input_type -> pb.Post
	9,  // 19: pb.ForumService.DeleteForum:input_type -> pb.ForumIdRequest
	9,  // 20: pb.ForumService.DeleteThread:input_type -> pb.ForumIdRequest
	9,  // 21: pb.ForumService.DeletePost:input_type -> pb.ForumIdRequest
	10, // 22: pb.ForumService.CreateForum:output_type -> pb.ForumIdResponse
	10, // 23: pb.ForumService.CreateThread:output_type -> pb.ForumIdResponse
	10, // 24: pb.ForumService.CreatePost:output_type -> pb.ForumIdResponse
	0,  // 25: pb.ForumService.GetForum:output_type -> pb.Forum
	0,  // 26: pb.ForumService.GetForums:output_type -> pb.Forum
	1,  // 27: pb.ForumService.GetThread:output_type -> pb.Thread
	1,  // 28: pb.ForumService.GetThreads:output_type -> pb.Thread
	2,  // 29: pb.ForumService.GetPosts:output_type -> pb.Post
	0,  // 30: pb.ForumService.UpdateForum:output_type -> pb.Forum
	1,  // 31: pb.ForumService.UpdateThread:output_type -> pb.Thread
	2,  // 32: pb.ForumService.UpdatePost:output_type -> pb.Post
	10, // 33: pb.ForumService.DeleteForum:output_type -> pb.ForumIdResponse
	10, // 34: pb.ForumService.DeleteThread:output_type -> pb.ForumIdResponse
	10, // 35: pb.ForumService.DeletePost:output_type -> pb.ForumIdResponse
	22, // [22:36] is the sub-list for method output_type
	8,  // [8:22] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_forum_proto_init() }
func file_forum_proto_init() {
	if File_forum_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_forum_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Forum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Thread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForumsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForumsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetThreadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetThreadsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetThreadsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forum_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_forum_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_forum_proto_goTypes,
		DependencyIndexes: file_forum_proto_depIdxs,
		MessageInfos:      file_forum_proto_msgTypes,
	}.Build()
	File_forum_proto = out.File
	file_forum_proto_rawDesc = nil
	file_forum_proto_goTypes = nil
	file_forum_proto_depIdxs = nil
}
